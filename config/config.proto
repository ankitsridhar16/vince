syntax = "proto3";
package config;
import "google/protobuf/duration.proto";

option go_package = "github.com/gernest/vince/config";

message Config {
  string listen_address = 1;
  Env env = 2;
  string url = 3;
  Mailer mailer = 4;
  string data_path = 5;
  bool enable_email_verification = 6;
  bool is_self_host = 7;
  LogLevel log_level = 8;
  string secret_key_base = 9;
  Cors cors = 10;
  Ed25519Key ed25519_key_pair = 11;
  repeated uint64 super_user_id = 12;
  Firewall firewall = 13;
  repeated string site_limit_exempt = 14;
  Intervals intervals = 15;

  // Base64 encoded secret of 48 bytes (before encoding). This is used for
  // securing cookies. The first 32 bytes are used for hmac hashing and the 16
  // bytes are used for encryption.
  //
  // Cookies are encrypted. This can be referred to as cookie encrtyption key.
  // Change of this value invalidates all cookies, this can lead to lgging out
  // of authenticated clients.
  string cookie_store_secret = 16;

  // Path where we store backups. Backups aren't incremental, we perfoem full
  // system storage backup.
  //
  // Only opearional data (sqlite) and timeseries data is backed up, Temporary
  // buffered data is not(even if persisted on disk).
  string backup_dir = 17;

  // maximum number of sites per user.
  uint32 site_limit = 18;

  message Mailer {
    Address address = 1;
    Smtp smtp = 2;

    message Smtp {
      string host = 1;
      int32 port = 2;
      oneof auth {
        Anonymous anonymous = 3;
        Plain plain = 4;
        OauthBearer oauth_bearer = 5;
      }
    }
    message Anonymous { string trace = 1; }

    message Plain {
      string identity = 1;
      string username = 2;
      string password = 3;
    }

    message OauthBearer {
      string username = 1;
      string token = 2;
      string host = 3;
      int32 port = 4;
    }
  }
  message Address {
    string name = 1;
    string email = 2;
  }

  enum Env {
    dev = 0;
    stagging = 1;
    prod = 2;
    load = 3;
  }

  enum LogLevel {
    debug = 0;
    info = 1;
    warn = 2;
    error = 3;
    fatal = 4;
    panic = 6;
    // NoLevel defines an absent log level.
    no = 7;
    // Disabled disables the logger.
    disabled = 8;
    // TraceLevel defines trace log level.
    trace = -1;
  }

  message Ed25519Key {
    string public_key_path = 1;
    string private_key_path = 2;
  }
}

// Various intervals used by the system
message Intervals {
  // Duration untill the next cache refreshes sites by domain. We use cache for
  // faster lookup during events ingestion. We periodically refresh the cache
  // using this interval.
  google.protobuf.Duration sites_by_domain_cache_refresh_interval = 1;

  // How often do we check for log rotation. This is used to check if we need to
  // rotate logs. Logs are rotated by day.
  google.protobuf.Duration log_rotation_check_interval = 2;

  // Duration for time series data is persisted in storage. Timeseries data is
  // buffered in memory. Use this relative to merge_timeseries_interval for
  // proper adjustment on time spant over amount of memory needed per iteration.
  //
  // Say you use 15 minute save_timeseries_buffer_interval and  30 mins
  // merge_timeseries_interval
  // Roughly estimate  for merge op to have up to 3 entries  per user on each
  // merge window.
  google.protobuf.Duration save_timeseries_buffer_interval = 3;

  // Duration to perform compaction of timeseries data. Data is stored as
  // parquet files grouped by user id. This is used as a window to merge
  // together all parquet files per user in a day into a single parquet file.
  //
  // At the end of a day only 1 file will be stored with all timeseries data per
  // user. However during the day we can have multiple timeseries files per user
  // before this window triggers the compaction.
  //
  // save_timeseries_buffer_interval will determine how many files will exist
  // before being merged together. The smaller the
  // save_timeseries_buffer_interval the higher the number of files.
  google.protobuf.Duration merge_timeseries_interval = 4;

  // Duration to collect system metrics. This includes counters, gauages and
  // histograms.
  google.protobuf.Duration system_scrape_interval = 5;
}

message Cors {
  string origin = 1;
  bool credentials = 2;
  int32 max_age = 3;
  repeated string headers = 4;
  repeated string expose = 5;
  repeated string methods = 6;
  bool send_preflight_response = 7;
}

message Firewall {
  repeated Match block = 1;
  repeated Match allow = 2;

  message Match {
    oneof match { IP ip = 1; }
  }

  message IP { string address = 1; }
}