syntax = "proto3";
package v1;

option go_package = "github.com/vinceanalytics/vince/proro/v1";
import "google/protobuf/duration.proto";

// StorePrefix defines different kind of data we are storing in the key value
// store.
enum StorePrefix {
  SITES = 0;
  BLOCKS = 1;
  ALERTS = 2;
  ACCOUNT = 3;
  TOKEN = 4;
}

message StoreKey {
  string namespace = 1;
  StorePrefix prefix = 2;
}

message Site {
  string domain = 1;

  message Key {
    StoreKey store = 1;
    string domain = 2;
  }

  message List {
    repeated Site list = 1;

    message Request {}
  }
}

message Metadata { repeated Block blocks = 1; }

// Defines metadata about a single parquet file.
message Block {
  // a ULID string identifier for this block.
  bytes id = 1;
  // Smallest timestamp in milliseconds observed in this block
  int64 min = 2;
  // Largest timestamp in milliseconds observed in this block.
  int64 max = 3;
  // Size on bytes contained in this block
  int64 size = 4;

  message Key {
    StoreKey store = 1;
    Kind kind = 2;
    string domain = 3;
    string uid = 4;

    enum Kind {
      METADATA = 0;
      INDEX = 1;
    }
  }

  message Index {
    map<int32, Bitmap> groups = 1;
    int64 min = 2;
    int64 max = 3;

    message Bitmap {
      bytes bitmap = 1;
      int64 min = 2;
      int64 max = 3;
    }

    enum Column {
      Browser = 0;
      BrowserVersion = 1;
      City = 2;
      Country = 3;
      Domain = 4;
      EntryPage = 5;
      ExitPage = 6;
      Host = 7;
      Event = 8;
      Os = 9;
      OsVersion = 10;
      Path = 11;
      Referrer = 12;
      ReferrerSource = 13;
      Region = 14;
      Screen = 15;
      UtmCampaign = 16;
      UtmContent = 17;
      UtmMedium = 18;
      UtmSource = 19;
      UtmTerm = 20;
    }

    message BloomKey {
      Column column = 1;
      string value = 2;
    }
  }
}

message Status {}

message Build { string version = 1; }

message Filter {
  string column = 1;
  Op op = 2;
  oneof value {
    string str = 3;
    int64 timestamp = 4;
    int64 duration = 5;
  }
  enum Op {
    equal = 0;
    not_equal = 1;
    greater = 2;
    greater_equal = 3;
    less = 4;
    less_equal = 5;
  }
}

// Configuration object for vince instance
message Config {
  // Path to the directory which is used to store metadata. This directory  is
  // managed by  badger key/value store. WHich is used to store all metadata
  // regarding sites events.
  //
  // Metadata includes
  //  - Registered sites
  //  - Blocks metadata
  //  - Blocks indexes
  string meta_path = 1;

  // Path to where block files are stored. Blocks are stored as files with ULID
  // as filenames
  string blocks_path = 2;

  // host:port to bind for http api. This is used by serve command. The server
  // serves ui console
  string listen_address = 3;

  // Control how much is logged options are
  // trace,debug,info,warn,error,fatal,panic
  string log_level = 4;

  // Interval for syncing buffered entries. By default events are buffered and
  // periodically saved.
  google.protobuf.Duration sync_interval = 5;

  // Expose /debug/pprof endpoint when serving
  bool enable_profile = 6;

  // host:port to bind myslq server. Serves web analytics via MySQL compliant
  // wire protocol.
  string mysql_listen_address = 7;

  string tls_cert_file = 8;
  string tls_key_file = 9;
}

message Account {
  string name = 1;
  bytes hashed_password = 2;

  message Key {
    StoreKey store = 1;
    string name = 2;
  }
}

message Client {
  bytes private_key = 1;

  // Authentication details of vince instances
  map<string, Instance> instance = 2;

  // The default auth name to use.
  Active active = 4;

  message Instance { map<string, Auth> accounts = 1; }

  message Active {
    string instance = 1;
    string account = 2;
  }
  message Auth {
    string name = 1;
    string token = 2;
    string api = 3;
    string mysql = 4;
  }
}

message Token {
  bytes pub_key = 1;

  message Request {
    string name = 1;
    string password = 2;
    string token = 3;
    bytes public_key = 4;
    // When true, the token will be generated by the server.
    bool generate = 5;
    google.protobuf.Duration ttl = 6;
  }

  message Key {
    StoreKey store = 1;
    int64 hash = 2;
  }

  enum Issuer {
    SERVER = 0;
    CLIENT = 1;
  }
}

message Error {
  string error = 1;
  int32 code = 2;
}