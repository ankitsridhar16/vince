// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: api.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StorePrefix defines different kind of data we are storing in the key value
// store.
type StorePrefix int32

const (
	StorePrefix_SITES  StorePrefix = 0
	StorePrefix_BLOCKS StorePrefix = 1
	StorePrefix_ALERTS StorePrefix = 2
)

// Enum value maps for StorePrefix.
var (
	StorePrefix_name = map[int32]string{
		0: "SITES",
		1: "BLOCKS",
		2: "ALERTS",
	}
	StorePrefix_value = map[string]int32{
		"SITES":  0,
		"BLOCKS": 1,
		"ALERTS": 2,
	}
)

func (x StorePrefix) Enum() *StorePrefix {
	p := new(StorePrefix)
	*p = x
	return p
}

func (x StorePrefix) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorePrefix) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (StorePrefix) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x StorePrefix) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorePrefix.Descriptor instead.
func (StorePrefix) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type Op int32

const (
	Op_equal         Op = 0
	Op_not_equal     Op = 1
	Op_greater       Op = 2
	Op_greater_equal Op = 3
	Op_less          Op = 4
	Op_less_equal    Op = 5
)

// Enum value maps for Op.
var (
	Op_name = map[int32]string{
		0: "equal",
		1: "not_equal",
		2: "greater",
		3: "greater_equal",
		4: "less",
		5: "less_equal",
	}
	Op_value = map[string]int32{
		"equal":         0,
		"not_equal":     1,
		"greater":       2,
		"greater_equal": 3,
		"less":          4,
		"less_equal":    5,
	}
)

func (x Op) Enum() *Op {
	p := new(Op)
	*p = x
	return p
}

func (x Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (Op) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op.Descriptor instead.
func (Op) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type Block_Key_Kind int32

const (
	Block_Key_METADATA Block_Key_Kind = 0
	Block_Key_INDEX    Block_Key_Kind = 1
)

// Enum value maps for Block_Key_Kind.
var (
	Block_Key_Kind_name = map[int32]string{
		0: "METADATA",
		1: "INDEX",
	}
	Block_Key_Kind_value = map[string]int32{
		"METADATA": 0,
		"INDEX":    1,
	}
)

func (x Block_Key_Kind) Enum() *Block_Key_Kind {
	p := new(Block_Key_Kind)
	*p = x
	return p
}

func (x Block_Key_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_Key_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (Block_Key_Kind) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x Block_Key_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_Key_Kind.Descriptor instead.
func (Block_Key_Kind) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3, 0, 0}
}

type Block_Index_Column int32

const (
	Block_Index_Browser        Block_Index_Column = 0
	Block_Index_BrowserVersion Block_Index_Column = 1
	Block_Index_City           Block_Index_Column = 2
	Block_Index_Country        Block_Index_Column = 3
	Block_Index_Domain         Block_Index_Column = 4
	Block_Index_EntryPage      Block_Index_Column = 5
	Block_Index_ExitPage       Block_Index_Column = 6
	Block_Index_Host           Block_Index_Column = 7
	Block_Index_Event          Block_Index_Column = 8
	Block_Index_Os             Block_Index_Column = 9
	Block_Index_OsVersion      Block_Index_Column = 10
	Block_Index_Path           Block_Index_Column = 11
	Block_Index_Referrer       Block_Index_Column = 12
	Block_Index_ReferrerSource Block_Index_Column = 13
	Block_Index_Region         Block_Index_Column = 14
	Block_Index_Screen         Block_Index_Column = 15
	Block_Index_UtmCampaign    Block_Index_Column = 16
	Block_Index_UtmContent     Block_Index_Column = 17
	Block_Index_UtmMedium      Block_Index_Column = 18
	Block_Index_UtmSource      Block_Index_Column = 19
	Block_Index_UtmTerm        Block_Index_Column = 20
)

// Enum value maps for Block_Index_Column.
var (
	Block_Index_Column_name = map[int32]string{
		0:  "Browser",
		1:  "BrowserVersion",
		2:  "City",
		3:  "Country",
		4:  "Domain",
		5:  "EntryPage",
		6:  "ExitPage",
		7:  "Host",
		8:  "Event",
		9:  "Os",
		10: "OsVersion",
		11: "Path",
		12: "Referrer",
		13: "ReferrerSource",
		14: "Region",
		15: "Screen",
		16: "UtmCampaign",
		17: "UtmContent",
		18: "UtmMedium",
		19: "UtmSource",
		20: "UtmTerm",
	}
	Block_Index_Column_value = map[string]int32{
		"Browser":        0,
		"BrowserVersion": 1,
		"City":           2,
		"Country":        3,
		"Domain":         4,
		"EntryPage":      5,
		"ExitPage":       6,
		"Host":           7,
		"Event":          8,
		"Os":             9,
		"OsVersion":      10,
		"Path":           11,
		"Referrer":       12,
		"ReferrerSource": 13,
		"Region":         14,
		"Screen":         15,
		"UtmCampaign":    16,
		"UtmContent":     17,
		"UtmMedium":      18,
		"UtmSource":      19,
		"UtmTerm":        20,
	}
)

func (x Block_Index_Column) Enum() *Block_Index_Column {
	p := new(Block_Index_Column)
	*p = x
	return p
}

func (x Block_Index_Column) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_Index_Column) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[3].Descriptor()
}

func (Block_Index_Column) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[3]
}

func (x Block_Index_Column) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_Index_Column.Descriptor instead.
func (Block_Index_Column) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3, 1, 0}
}

type StoreKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string      `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Prefix    StorePrefix `protobuf:"varint,2,opt,name=prefix,proto3,enum=v1.StorePrefix" json:"prefix,omitempty"`
	Key       string      `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StoreKey) Reset() {
	*x = StoreKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKey) ProtoMessage() {}

func (x *StoreKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKey.ProtoReflect.Descriptor instead.
func (*StoreKey) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *StoreKey) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StoreKey) GetPrefix() StorePrefix {
	if x != nil {
		return x.Prefix
	}
	return StorePrefix_SITES
}

func (x *StoreKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string      `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Stats  *Site_Stats `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *Site) Reset() {
	*x = Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *Site) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Site) GetStats() *Site_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// Defines metadata about a single parquet file.
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a ULID string identifier for this block.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Smallest timestamp in milliseconds observed in this block
	Min int64 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	// Largest timestamp in milliseconds observed in this block.
	Max int64 `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	// Size on bytes contained in this block
	Size int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Block) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Block) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Block) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Block) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors        float64 `protobuf:"fixed64,1,opt,name=visitors,proto3" json:"visitors,omitempty"`
	PageViews       float64 `protobuf:"fixed64,2,opt,name=page_views,json=pageViews,proto3" json:"page_views,omitempty"`
	BounceRate      float64 `protobuf:"fixed64,3,opt,name=bounce_rate,json=bounceRate,proto3" json:"bounce_rate,omitempty"`
	SessionDuration float64 `protobuf:"fixed64,4,opt,name=session_duration,json=sessionDuration,proto3" json:"session_duration,omitempty"`
	Sessions        float64 `protobuf:"fixed64,5,opt,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *Stats) GetVisitors() float64 {
	if x != nil {
		return x.Visitors
	}
	return 0
}

func (x *Stats) GetPageViews() float64 {
	if x != nil {
		return x.PageViews
	}
	return 0
}

func (x *Stats) GetBounceRate() float64 {
	if x != nil {
		return x.BounceRate
	}
	return 0
}

func (x *Stats) GetSessionDuration() float64 {
	if x != nil {
		return x.SessionDuration
	}
	return 0
}

func (x *Stats) GetSessions() float64 {
	if x != nil {
		return x.Sessions
	}
	return 0
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Op     Op     `protobuf:"varint,2,opt,name=op,proto3,enum=v1.Op" json:"op,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Filter_Str
	//	*Filter_Timestamp
	//	*Filter_Duration
	Value isFilter_Value `protobuf_oneof:"value"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *Filter) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Filter) GetOp() Op {
	if x != nil {
		return x.Op
	}
	return Op_equal
}

func (m *Filter) GetValue() isFilter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Filter) GetStr() string {
	if x, ok := x.GetValue().(*Filter_Str); ok {
		return x.Str
	}
	return ""
}

func (x *Filter) GetTimestamp() int64 {
	if x, ok := x.GetValue().(*Filter_Timestamp); ok {
		return x.Timestamp
	}
	return 0
}

func (x *Filter) GetDuration() int64 {
	if x, ok := x.GetValue().(*Filter_Duration); ok {
		return x.Duration
	}
	return 0
}

type isFilter_Value interface {
	isFilter_Value()
}

type Filter_Str struct {
	Str string `protobuf:"bytes,3,opt,name=str,proto3,oneof"`
}

type Filter_Timestamp struct {
	Timestamp int64 `protobuf:"varint,4,opt,name=timestamp,proto3,oneof"`
}

type Filter_Duration struct {
	Duration int64 `protobuf:"varint,5,opt,name=duration,proto3,oneof"`
}

func (*Filter_Str) isFilter_Value() {}

func (*Filter_Timestamp) isFilter_Value() {}

func (*Filter_Duration) isFilter_Value() {}

type Site_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors  float64 `protobuf:"fixed64,1,opt,name=visitors,proto3" json:"visitors,omitempty"`
	PageViews float64 `protobuf:"fixed64,2,opt,name=page_views,json=pageViews,proto3" json:"page_views,omitempty"`
	Sessions  float64 `protobuf:"fixed64,3,opt,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *Site_Stats) Reset() {
	*x = Site_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site_Stats) ProtoMessage() {}

func (x *Site_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site_Stats.ProtoReflect.Descriptor instead.
func (*Site_Stats) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Site_Stats) GetVisitors() float64 {
	if x != nil {
		return x.Visitors
	}
	return 0
}

func (x *Site_Stats) GetPageViews() float64 {
	if x != nil {
		return x.PageViews
	}
	return 0
}

func (x *Site_Stats) GetSessions() float64 {
	if x != nil {
		return x.Sessions
	}
	return 0
}

type Block_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind   Block_Key_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=v1.Block_Key_Kind" json:"kind,omitempty"`
	Domain string         `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Uid    string         `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *Block_Key) Reset() {
	*x = Block_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Key) ProtoMessage() {}

func (x *Block_Key) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Key.ProtoReflect.Descriptor instead.
func (*Block_Key) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Block_Key) GetKind() Block_Key_Kind {
	if x != nil {
		return x.Kind
	}
	return Block_Key_METADATA
}

func (x *Block_Key) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Block_Key) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Block_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups map[int32]*Block_Index_Bitmap `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Min    int64                         `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	Max    int64                         `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *Block_Index) Reset() {
	*x = Block_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Index) ProtoMessage() {}

func (x *Block_Index) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Index.ProtoReflect.Descriptor instead.
func (*Block_Index) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Block_Index) GetGroups() map[int32]*Block_Index_Bitmap {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Block_Index) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Block_Index) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Block_Index_Bitmap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitmap []byte `protobuf:"bytes,1,opt,name=bitmap,proto3" json:"bitmap,omitempty"`
	Min    int64  `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	Max    int64  `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *Block_Index_Bitmap) Reset() {
	*x = Block_Index_Bitmap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Index_Bitmap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Index_Bitmap) ProtoMessage() {}

func (x *Block_Index_Bitmap) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Index_Bitmap.ProtoReflect.Descriptor instead.
func (*Block_Index_Bitmap) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3, 1, 1}
}

func (x *Block_Index_Bitmap) GetBitmap() []byte {
	if x != nil {
		return x.Bitmap
	}
	return nil
}

func (x *Block_Index_Bitmap) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Block_Index_Bitmap) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Block_Index_BloomKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column Block_Index_Column `protobuf:"varint,1,opt,name=column,proto3,enum=v1.Block_Index_Column" json:"column,omitempty"`
	Value  string             `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Block_Index_BloomKey) Reset() {
	*x = Block_Index_BloomKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Index_BloomKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Index_BloomKey) ProtoMessage() {}

func (x *Block_Index_BloomKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Index_BloomKey.ProtoReflect.Descriptor instead.
func (*Block_Index_BloomKey) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3, 1, 2}
}

func (x *Block_Index_BloomKey) GetColumn() Block_Index_Column {
	if x != nil {
		return x.Column
	}
	return Block_Index_Browser
}

func (x *Block_Index_BloomKey) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22,
	0x63, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x5e, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2d, 0x0a, 0x08, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0xbf, 0x06, 0x0a, 0x05, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0x78, 0x0a, 0x03,
	0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4b, 0x65, 0x79,
	0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0c, 0x0a,
	0x08, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x10, 0x01, 0x1a, 0xf3, 0x04, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x33, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x1a, 0x51, 0x0a, 0x0b, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x42, 0x69, 0x74, 0x6d, 0x61,
	0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x06,
	0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x1a, 0x50, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x2e,
	0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74, 0x50, 0x61, 0x67, 0x65, 0x10, 0x06,
	0x12, 0x08, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x08, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x73, 0x10, 0x09, 0x12, 0x0d, 0x0a,
	0x09, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x10, 0x0f,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x74, 0x6d, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x10,
	0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x74, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x10,
	0x11, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x74, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x10, 0x12,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x74, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x13, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x74, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x10, 0x14, 0x22, 0xaa, 0x01, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x02,
	0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x52, 0x02, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x1e, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a,
	0x30, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x49, 0x54, 0x45, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x53, 0x10,
	0x02, 0x2a, 0x58, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x65, 0x73, 0x73, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x6c,
	0x65, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x05, 0x42, 0x2a, 0x5a, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x72, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_proto_goTypes = []interface{}{
	(StorePrefix)(0),             // 0: v1.StorePrefix
	(Op)(0),                      // 1: v1.Op
	(Block_Key_Kind)(0),          // 2: v1.Block.Key.Kind
	(Block_Index_Column)(0),      // 3: v1.Block.Index.Column
	(*StoreKey)(nil),             // 4: v1.StoreKey
	(*Site)(nil),                 // 5: v1.Site
	(*Metadata)(nil),             // 6: v1.Metadata
	(*Block)(nil),                // 7: v1.Block
	(*Stats)(nil),                // 8: v1.Stats
	(*Filter)(nil),               // 9: v1.Filter
	(*Site_Stats)(nil),           // 10: v1.Site.Stats
	(*Block_Key)(nil),            // 11: v1.Block.Key
	(*Block_Index)(nil),          // 12: v1.Block.Index
	nil,                          // 13: v1.Block.Index.GroupsEntry
	(*Block_Index_Bitmap)(nil),   // 14: v1.Block.Index.Bitmap
	(*Block_Index_BloomKey)(nil), // 15: v1.Block.Index.BloomKey
}
var file_api_proto_depIdxs = []int32{
	0,  // 0: v1.StoreKey.prefix:type_name -> v1.StorePrefix
	10, // 1: v1.Site.stats:type_name -> v1.Site.Stats
	7,  // 2: v1.Metadata.blocks:type_name -> v1.Block
	1,  // 3: v1.Filter.op:type_name -> v1.Op
	2,  // 4: v1.Block.Key.kind:type_name -> v1.Block.Key.Kind
	13, // 5: v1.Block.Index.groups:type_name -> v1.Block.Index.GroupsEntry
	14, // 6: v1.Block.Index.GroupsEntry.value:type_name -> v1.Block.Index.Bitmap
	3,  // 7: v1.Block.Index.BloomKey.column:type_name -> v1.Block.Index.Column
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Index_Bitmap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Index_BloomKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Filter_Str)(nil),
		(*Filter_Timestamp)(nil),
		(*Filter_Duration)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
