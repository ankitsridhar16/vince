package main

import (
	"bytes"
	"fmt"
	"go/format"
	"log"
	"os"
	"sort"

	"github.com/gernest/vince/geoip"
)

var ps = map[string]struct{}{}

func main() {
	r := geoip.Reader()
	n := r.Networks()
	for n.Next() {
		var v interface{}
		ip, err := n.Network(&v)
		if err != nil {
			log.Fatal(err)
		}
		ps[ip.IP.String()] = struct{}{}
	}
	var b bytes.Buffer
	fmt.Fprintln(&b, "// DO NOT EDIT Code generated by geoip/load/make_load.go")
	fmt.Fprintln(&b, " package main")
	fmt.Fprintf(&b, " var ipList=[%d]string{\n", len(ps))
	var ls []string
	for k := range ps {
		ls = append(ls, k)
	}
	sort.Strings(ls)
	for i, k := range ls {
		if i%100 == 0 {
			b.WriteByte('\n')
		}
		fmt.Fprintf(&b, "%q,", k)
	}
	fmt.Fprintln(&b, "\n}")

	rs, err := format.Source(b.Bytes())
	if err != nil {
		log.Fatal(err)
	}
	os.WriteFile("cmd/load/ip_list.go", rs, 0600)
}
