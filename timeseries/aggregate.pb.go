// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: aggregate.proto

package timeseries

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DayStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors uint64       `protobuf:"varint,1,opt,name=visitors,proto3" json:"visitors,omitempty"`
	Visits   uint64       `protobuf:"varint,2,opt,name=visits,proto3" json:"visits,omitempty"`
	Stats    []*HourStats `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *DayStats) Reset() {
	*x = DayStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aggregate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayStats) ProtoMessage() {}

func (x *DayStats) ProtoReflect() protoreflect.Message {
	mi := &file_aggregate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayStats.ProtoReflect.Descriptor instead.
func (*DayStats) Descriptor() ([]byte, []int) {
	return file_aggregate_proto_rawDescGZIP(), []int{0}
}

func (x *DayStats) GetVisitors() uint64 {
	if x != nil {
		return x.Visitors
	}
	return 0
}

func (x *DayStats) GetVisits() uint64 {
	if x != nil {
		return x.Visits
	}
	return 0
}

func (x *DayStats) GetStats() []*HourStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type HourStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors   uint64                 `protobuf:"varint,1,opt,name=visitors,proto3" json:"visitors,omitempty"`
	Visits     uint64                 `protobuf:"varint,2,opt,name=visits,proto3" json:"visits,omitempty"`
	Properties *Properties            `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HourStats) Reset() {
	*x = HourStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aggregate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HourStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourStats) ProtoMessage() {}

func (x *HourStats) ProtoReflect() protoreflect.Message {
	mi := &file_aggregate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourStats.ProtoReflect.Descriptor instead.
func (*HourStats) Descriptor() ([]byte, []int) {
	return file_aggregate_proto_rawDescGZIP(), []int{1}
}

func (x *HourStats) GetVisitors() uint64 {
	if x != nil {
		return x.Visitors
	}
	return 0
}

func (x *HourStats) GetVisits() uint64 {
	if x != nil {
		return x.Visits
	}
	return 0
}

func (x *HourStats) GetProperties() *Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *HourStats) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *PropAggregate `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Page           *PropAggregate `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	EntryPage      *PropAggregate `protobuf:"bytes,3,opt,name=entry_page,json=entryPage,proto3" json:"entry_page,omitempty"`
	ExitPage       *PropAggregate `protobuf:"bytes,4,opt,name=exit_page,json=exitPage,proto3" json:"exit_page,omitempty"`
	Referrer       *PropAggregate `protobuf:"bytes,5,opt,name=referrer,proto3" json:"referrer,omitempty"`
	UtmMedium      *PropAggregate `protobuf:"bytes,6,opt,name=utm_medium,json=utmMedium,proto3" json:"utm_medium,omitempty"`
	UtmSource      *PropAggregate `protobuf:"bytes,7,opt,name=utm_source,json=utmSource,proto3" json:"utm_source,omitempty"`
	UtmCampaign    *PropAggregate `protobuf:"bytes,8,opt,name=utm_campaign,json=utmCampaign,proto3" json:"utm_campaign,omitempty"`
	UtmContent     *PropAggregate `protobuf:"bytes,9,opt,name=utm_content,json=utmContent,proto3" json:"utm_content,omitempty"`
	UtmTerm        *PropAggregate `protobuf:"bytes,10,opt,name=utm_term,json=utmTerm,proto3" json:"utm_term,omitempty"`
	UtmDevice      *PropAggregate `protobuf:"bytes,11,opt,name=utm_device,json=utmDevice,proto3" json:"utm_device,omitempty"`
	Browser        *PropAggregate `protobuf:"bytes,12,opt,name=browser,proto3" json:"browser,omitempty"`
	BrowserVersion *PropAggregate `protobuf:"bytes,13,opt,name=browser_version,json=browserVersion,proto3" json:"browser_version,omitempty"`
	Os             *PropAggregate `protobuf:"bytes,14,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion      *PropAggregate `protobuf:"bytes,15,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	Country        *PropAggregate `protobuf:"bytes,16,opt,name=country,proto3" json:"country,omitempty"`
	Region         *PropAggregate `protobuf:"bytes,17,opt,name=region,proto3" json:"region,omitempty"`
	City           *PropAggregate `protobuf:"bytes,18,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *Properties) Reset() {
	*x = Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aggregate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Properties) ProtoMessage() {}

func (x *Properties) ProtoReflect() protoreflect.Message {
	mi := &file_aggregate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Properties.ProtoReflect.Descriptor instead.
func (*Properties) Descriptor() ([]byte, []int) {
	return file_aggregate_proto_rawDescGZIP(), []int{2}
}

func (x *Properties) GetName() *PropAggregate {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Properties) GetPage() *PropAggregate {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *Properties) GetEntryPage() *PropAggregate {
	if x != nil {
		return x.EntryPage
	}
	return nil
}

func (x *Properties) GetExitPage() *PropAggregate {
	if x != nil {
		return x.ExitPage
	}
	return nil
}

func (x *Properties) GetReferrer() *PropAggregate {
	if x != nil {
		return x.Referrer
	}
	return nil
}

func (x *Properties) GetUtmMedium() *PropAggregate {
	if x != nil {
		return x.UtmMedium
	}
	return nil
}

func (x *Properties) GetUtmSource() *PropAggregate {
	if x != nil {
		return x.UtmSource
	}
	return nil
}

func (x *Properties) GetUtmCampaign() *PropAggregate {
	if x != nil {
		return x.UtmCampaign
	}
	return nil
}

func (x *Properties) GetUtmContent() *PropAggregate {
	if x != nil {
		return x.UtmContent
	}
	return nil
}

func (x *Properties) GetUtmTerm() *PropAggregate {
	if x != nil {
		return x.UtmTerm
	}
	return nil
}

func (x *Properties) GetUtmDevice() *PropAggregate {
	if x != nil {
		return x.UtmDevice
	}
	return nil
}

func (x *Properties) GetBrowser() *PropAggregate {
	if x != nil {
		return x.Browser
	}
	return nil
}

func (x *Properties) GetBrowserVersion() *PropAggregate {
	if x != nil {
		return x.BrowserVersion
	}
	return nil
}

func (x *Properties) GetOs() *PropAggregate {
	if x != nil {
		return x.Os
	}
	return nil
}

func (x *Properties) GetOsVersion() *PropAggregate {
	if x != nil {
		return x.OsVersion
	}
	return nil
}

func (x *Properties) GetCountry() *PropAggregate {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *Properties) GetRegion() *PropAggregate {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *Properties) GetCity() *PropAggregate {
	if x != nil {
		return x.City
	}
	return nil
}

type PropAggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aggregate map[string]*Aggregate `protobuf:"bytes,1,rep,name=aggregate,proto3" json:"aggregate,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PropAggregate) Reset() {
	*x = PropAggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aggregate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropAggregate) ProtoMessage() {}

func (x *PropAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_aggregate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropAggregate.ProtoReflect.Descriptor instead.
func (*PropAggregate) Descriptor() ([]byte, []int) {
	return file_aggregate_proto_rawDescGZIP(), []int{3}
}

func (x *PropAggregate) GetAggregate() map[string]*Aggregate {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

type Aggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors uint64 `protobuf:"varint,1,opt,name=visitors,proto3" json:"visitors,omitempty"`
	Visits   uint64 `protobuf:"varint,2,opt,name=visits,proto3" json:"visits,omitempty"`
}

func (x *Aggregate) Reset() {
	*x = Aggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aggregate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aggregate) ProtoMessage() {}

func (x *Aggregate) ProtoReflect() protoreflect.Message {
	mi := &file_aggregate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aggregate.ProtoReflect.Descriptor instead.
func (*Aggregate) Descriptor() ([]byte, []int) {
	return file_aggregate_proto_rawDescGZIP(), []int{4}
}

func (x *Aggregate) GetVisitors() uint64 {
	if x != nil {
		return x.Visitors
	}
	return 0
}

func (x *Aggregate) GetVisits() uint64 {
	if x != nil {
		return x.Visits
	}
	return 0
}

var File_aggregate_proto protoreflect.FileDescriptor

var file_aggregate_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b,
	0x0a, 0x08, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x12, 0x2b,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x48, 0x6f, 0x75, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x09,
	0x48, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x12, 0x36, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0xe6, 0x07, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0a,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x75, 0x74, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12,
	0x38, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x75, 0x74, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x75, 0x74, 0x6d,
	0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x75, 0x74, 0x6d, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x75, 0x74, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x75, 0x74, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x52, 0x07, 0x75, 0x74, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x38, 0x0a, 0x0a, 0x75, 0x74, 0x6d,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x75, 0x74, 0x6d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52,
	0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0xac, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x70, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x1a, 0x53, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x72, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aggregate_proto_rawDescOnce sync.Once
	file_aggregate_proto_rawDescData = file_aggregate_proto_rawDesc
)

func file_aggregate_proto_rawDescGZIP() []byte {
	file_aggregate_proto_rawDescOnce.Do(func() {
		file_aggregate_proto_rawDescData = protoimpl.X.CompressGZIP(file_aggregate_proto_rawDescData)
	})
	return file_aggregate_proto_rawDescData
}

var file_aggregate_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_aggregate_proto_goTypes = []interface{}{
	(*DayStats)(nil),              // 0: timeseries.DayStats
	(*HourStats)(nil),             // 1: timeseries.HourStats
	(*Properties)(nil),            // 2: timeseries.Properties
	(*PropAggregate)(nil),         // 3: timeseries.PropAggregate
	(*Aggregate)(nil),             // 4: timeseries.Aggregate
	nil,                           // 5: timeseries.PropAggregate.AggregateEntry
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_aggregate_proto_depIdxs = []int32{
	1,  // 0: timeseries.DayStats.stats:type_name -> timeseries.HourStats
	2,  // 1: timeseries.HourStats.properties:type_name -> timeseries.Properties
	6,  // 2: timeseries.HourStats.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 3: timeseries.Properties.name:type_name -> timeseries.PropAggregate
	3,  // 4: timeseries.Properties.page:type_name -> timeseries.PropAggregate
	3,  // 5: timeseries.Properties.entry_page:type_name -> timeseries.PropAggregate
	3,  // 6: timeseries.Properties.exit_page:type_name -> timeseries.PropAggregate
	3,  // 7: timeseries.Properties.referrer:type_name -> timeseries.PropAggregate
	3,  // 8: timeseries.Properties.utm_medium:type_name -> timeseries.PropAggregate
	3,  // 9: timeseries.Properties.utm_source:type_name -> timeseries.PropAggregate
	3,  // 10: timeseries.Properties.utm_campaign:type_name -> timeseries.PropAggregate
	3,  // 11: timeseries.Properties.utm_content:type_name -> timeseries.PropAggregate
	3,  // 12: timeseries.Properties.utm_term:type_name -> timeseries.PropAggregate
	3,  // 13: timeseries.Properties.utm_device:type_name -> timeseries.PropAggregate
	3,  // 14: timeseries.Properties.browser:type_name -> timeseries.PropAggregate
	3,  // 15: timeseries.Properties.browser_version:type_name -> timeseries.PropAggregate
	3,  // 16: timeseries.Properties.os:type_name -> timeseries.PropAggregate
	3,  // 17: timeseries.Properties.os_version:type_name -> timeseries.PropAggregate
	3,  // 18: timeseries.Properties.country:type_name -> timeseries.PropAggregate
	3,  // 19: timeseries.Properties.region:type_name -> timeseries.PropAggregate
	3,  // 20: timeseries.Properties.city:type_name -> timeseries.PropAggregate
	5,  // 21: timeseries.PropAggregate.aggregate:type_name -> timeseries.PropAggregate.AggregateEntry
	4,  // 22: timeseries.PropAggregate.AggregateEntry.value:type_name -> timeseries.Aggregate
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_aggregate_proto_init() }
func file_aggregate_proto_init() {
	if File_aggregate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aggregate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aggregate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HourStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aggregate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aggregate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropAggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aggregate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aggregate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aggregate_proto_goTypes,
		DependencyIndexes: file_aggregate_proto_depIdxs,
		MessageInfos:      file_aggregate_proto_msgTypes,
	}.Build()
	File_aggregate_proto = out.File
	file_aggregate_proto_rawDesc = nil
	file_aggregate_proto_goTypes = nil
	file_aggregate_proto_depIdxs = nil
}
