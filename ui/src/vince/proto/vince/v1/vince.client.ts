// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies
// @generated from protobuf file "vince/v1/vince.proto" (package "v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Vince } from "./vince";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Site_Create_Request } from "./vince";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service v1.Vince
 */
export interface IVinceClient {
    /**
     * @generated from protobuf rpc: CreateSite(v1.Site.Create.Request) returns (v1.Site.Create.Request);
     */
    createSite(input: Site_Create_Request, options?: RpcOptions): UnaryCall<Site_Create_Request, Site_Create_Request>;
}
/**
 * @generated from protobuf service v1.Vince
 */
export class VinceClient implements IVinceClient, ServiceInfo {
    typeName = Vince.typeName;
    methods = Vince.methods;
    options = Vince.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateSite(v1.Site.Create.Request) returns (v1.Site.Create.Request);
     */
    createSite(input: Site_Create_Request, options?: RpcOptions): UnaryCall<Site_Create_Request, Site_Create_Request> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Site_Create_Request, Site_Create_Request>("unary", this._transport, method, opt, input);
    }
}
