// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies
// @generated from protobuf file "vince/auth/v1/auth.proto" (package "v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../../google/protobuf/timestamp";
/**
 * @generated from protobuf message v1.AccessData
 */
export interface AccessData {
    /**
     * @generated from protobuf field: v1.AuthorizedClient client = 1;
     */
    client?: AuthorizedClient;
    /**
     * @generated from protobuf field: v1.AuthorizeData authorize_data = 2;
     */
    authorizeData?: AuthorizeData;
    /**
     * @generated from protobuf field: v1.AccessData access_data = 3;
     */
    accessData?: AccessData;
    /**
     * @generated from protobuf field: string access_token = 4;
     */
    accessToken: string;
    /**
     * @generated from protobuf field: string refresh_token = 5;
     */
    refreshToken: string;
    /**
     * @generated from protobuf field: int32 expires_in = 6;
     */
    expiresIn: number;
    /**
     * @generated from protobuf field: string scope = 7;
     */
    scope: string;
    /**
     * @generated from protobuf field: string redirect_uri = 8;
     */
    redirectUri: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 9;
     */
    createdAt?: Timestamp;
}
/**
 * @generated from protobuf message v1.AuthorizeData
 */
export interface AuthorizeData {
    /**
     * @generated from protobuf field: v1.AuthorizedClient client = 1;
     */
    client?: AuthorizedClient;
    /**
     * @generated from protobuf field: string code = 2;
     */
    code: string;
    /**
     * @generated from protobuf field: int32 expires_in = 3;
     */
    expiresIn: number;
    /**
     * @generated from protobuf field: string scope = 4;
     */
    scope: string;
    /**
     * @generated from protobuf field: string redirect_uri = 5;
     */
    redirectUri: string;
    /**
     * @generated from protobuf field: string state = 6;
     */
    state: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 7;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: string code_challenge = 8;
     */
    codeChallenge: string;
    /**
     * @generated from protobuf field: string code_challenge_method = 9;
     */
    codeChallengeMethod: string;
}
/**
 * @generated from protobuf message v1.AuthorizedClient
 */
export interface AuthorizedClient {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string secret = 2;
     */
    secret: string;
    /**
     * @generated from protobuf field: string redirect_url = 3;
     */
    redirectUrl: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class AccessData$Type extends MessageType<AccessData> {
    constructor() {
        super("v1.AccessData", [
            { no: 1, name: "client", kind: "message", T: () => AuthorizedClient },
            { no: 2, name: "authorize_data", kind: "message", T: () => AuthorizeData },
            { no: 3, name: "access_data", kind: "message", T: () => AccessData },
            { no: 4, name: "access_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "refresh_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "expires_in", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "scope", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "redirect_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "created_at", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<AccessData>): AccessData {
        const message = { accessToken: "", refreshToken: "", expiresIn: 0, scope: "", redirectUri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessData): AccessData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* v1.AuthorizedClient client */ 1:
                    message.client = AuthorizedClient.internalBinaryRead(reader, reader.uint32(), options, message.client);
                    break;
                case /* v1.AuthorizeData authorize_data */ 2:
                    message.authorizeData = AuthorizeData.internalBinaryRead(reader, reader.uint32(), options, message.authorizeData);
                    break;
                case /* v1.AccessData access_data */ 3:
                    message.accessData = AccessData.internalBinaryRead(reader, reader.uint32(), options, message.accessData);
                    break;
                case /* string access_token */ 4:
                    message.accessToken = reader.string();
                    break;
                case /* string refresh_token */ 5:
                    message.refreshToken = reader.string();
                    break;
                case /* int32 expires_in */ 6:
                    message.expiresIn = reader.int32();
                    break;
                case /* string scope */ 7:
                    message.scope = reader.string();
                    break;
                case /* string redirect_uri */ 8:
                    message.redirectUri = reader.string();
                    break;
                case /* google.protobuf.Timestamp created_at */ 9:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* v1.AuthorizedClient client = 1; */
        if (message.client)
            AuthorizedClient.internalBinaryWrite(message.client, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* v1.AuthorizeData authorize_data = 2; */
        if (message.authorizeData)
            AuthorizeData.internalBinaryWrite(message.authorizeData, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* v1.AccessData access_data = 3; */
        if (message.accessData)
            AccessData.internalBinaryWrite(message.accessData, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string access_token = 4; */
        if (message.accessToken !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.accessToken);
        /* string refresh_token = 5; */
        if (message.refreshToken !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.refreshToken);
        /* int32 expires_in = 6; */
        if (message.expiresIn !== 0)
            writer.tag(6, WireType.Varint).int32(message.expiresIn);
        /* string scope = 7; */
        if (message.scope !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.scope);
        /* string redirect_uri = 8; */
        if (message.redirectUri !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.redirectUri);
        /* google.protobuf.Timestamp created_at = 9; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message v1.AccessData
 */
export const AccessData = new AccessData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthorizeData$Type extends MessageType<AuthorizeData> {
    constructor() {
        super("v1.AuthorizeData", [
            { no: 1, name: "client", kind: "message", T: () => AuthorizedClient },
            { no: 2, name: "code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "expires_in", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "scope", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "redirect_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 8, name: "code_challenge", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "code_challenge_method", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AuthorizeData>): AuthorizeData {
        const message = { code: "", expiresIn: 0, scope: "", redirectUri: "", state: "", codeChallenge: "", codeChallengeMethod: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AuthorizeData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AuthorizeData): AuthorizeData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* v1.AuthorizedClient client */ 1:
                    message.client = AuthorizedClient.internalBinaryRead(reader, reader.uint32(), options, message.client);
                    break;
                case /* string code */ 2:
                    message.code = reader.string();
                    break;
                case /* int32 expires_in */ 3:
                    message.expiresIn = reader.int32();
                    break;
                case /* string scope */ 4:
                    message.scope = reader.string();
                    break;
                case /* string redirect_uri */ 5:
                    message.redirectUri = reader.string();
                    break;
                case /* string state */ 6:
                    message.state = reader.string();
                    break;
                case /* google.protobuf.Timestamp created_at */ 7:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* string code_challenge */ 8:
                    message.codeChallenge = reader.string();
                    break;
                case /* string code_challenge_method */ 9:
                    message.codeChallengeMethod = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AuthorizeData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* v1.AuthorizedClient client = 1; */
        if (message.client)
            AuthorizedClient.internalBinaryWrite(message.client, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string code = 2; */
        if (message.code !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.code);
        /* int32 expires_in = 3; */
        if (message.expiresIn !== 0)
            writer.tag(3, WireType.Varint).int32(message.expiresIn);
        /* string scope = 4; */
        if (message.scope !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.scope);
        /* string redirect_uri = 5; */
        if (message.redirectUri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.redirectUri);
        /* string state = 6; */
        if (message.state !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.state);
        /* google.protobuf.Timestamp created_at = 7; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string code_challenge = 8; */
        if (message.codeChallenge !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.codeChallenge);
        /* string code_challenge_method = 9; */
        if (message.codeChallengeMethod !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.codeChallengeMethod);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message v1.AuthorizeData
 */
export const AuthorizeData = new AuthorizeData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthorizedClient$Type extends MessageType<AuthorizedClient> {
    constructor() {
        super("v1.AuthorizedClient", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "secret", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "redirect_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AuthorizedClient>): AuthorizedClient {
        const message = { id: "", secret: "", redirectUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AuthorizedClient>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AuthorizedClient): AuthorizedClient {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string secret */ 2:
                    message.secret = reader.string();
                    break;
                case /* string redirect_url */ 3:
                    message.redirectUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AuthorizedClient, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string secret = 2; */
        if (message.secret !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.secret);
        /* string redirect_url = 3; */
        if (message.redirectUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.redirectUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message v1.AuthorizedClient
 */
export const AuthorizedClient = new AuthorizedClient$Type();
