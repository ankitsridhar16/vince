// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: blocks.proto

package blocks

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Op int32

const (
	Op_equal         Op = 0
	Op_not_equal     Op = 1
	Op_greater       Op = 2
	Op_greater_equal Op = 3
	Op_less          Op = 4
	Op_less_equal    Op = 5
)

// Enum value maps for Op.
var (
	Op_name = map[int32]string{
		0: "equal",
		1: "not_equal",
		2: "greater",
		3: "greater_equal",
		4: "less",
		5: "less_equal",
	}
	Op_value = map[string]int32{
		"equal":         0,
		"not_equal":     1,
		"greater":       2,
		"greater_equal": 3,
		"less":          4,
		"less_equal":    5,
	}
)

func (x Op) Enum() *Op {
	p := new(Op)
	*p = x
	return p
}

func (x Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op) Descriptor() protoreflect.EnumDescriptor {
	return file_blocks_proto_enumTypes[0].Descriptor()
}

func (Op) Type() protoreflect.EnumType {
	return &file_blocks_proto_enumTypes[0]
}

func (x Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op.Descriptor instead.
func (Op) EnumDescriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{0}
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// Defines metadata about a single parquet file.
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a ULID string identifier for this block.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Smallest timestamp in milliseconds observed in this block
	Min int64 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	// Largest timestamp in milliseconds observed in this block.
	Max int64 `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	// Size on bytes contained in this block
	Size int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// Block level statistsic about this site
	Stats *Stats `protobuf:"bytes,5,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Block) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Block) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Block) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Block) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitors        float64 `protobuf:"fixed64,1,opt,name=visitors,proto3" json:"visitors,omitempty"`
	PageViews       float64 `protobuf:"fixed64,2,opt,name=page_views,json=pageViews,proto3" json:"page_views,omitempty"`
	BounceRate      float64 `protobuf:"fixed64,3,opt,name=bounce_rate,json=bounceRate,proto3" json:"bounce_rate,omitempty"`
	SessionDuration float64 `protobuf:"fixed64,4,opt,name=session_duration,json=sessionDuration,proto3" json:"session_duration,omitempty"`
	Sessions        float64 `protobuf:"fixed64,5,opt,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{2}
}

func (x *Stats) GetVisitors() float64 {
	if x != nil {
		return x.Visitors
	}
	return 0
}

func (x *Stats) GetPageViews() float64 {
	if x != nil {
		return x.PageViews
	}
	return 0
}

func (x *Stats) GetBounceRate() float64 {
	if x != nil {
		return x.BounceRate
	}
	return 0
}

func (x *Stats) GetSessionDuration() float64 {
	if x != nil {
		return x.SessionDuration
	}
	return 0
}

func (x *Stats) GetSessions() float64 {
	if x != nil {
		return x.Sessions
	}
	return 0
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Op     Op     `protobuf:"varint,2,opt,name=op,proto3,enum=blocks.Op" json:"op,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Filter_Str
	//	*Filter_Timestamp
	//	*Filter_Duration
	Value isFilter_Value `protobuf_oneof:"value"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{3}
}

func (x *Filter) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Filter) GetOp() Op {
	if x != nil {
		return x.Op
	}
	return Op_equal
}

func (m *Filter) GetValue() isFilter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Filter) GetStr() string {
	if x, ok := x.GetValue().(*Filter_Str); ok {
		return x.Str
	}
	return ""
}

func (x *Filter) GetTimestamp() int64 {
	if x, ok := x.GetValue().(*Filter_Timestamp); ok {
		return x.Timestamp
	}
	return 0
}

func (x *Filter) GetDuration() int64 {
	if x, ok := x.GetValue().(*Filter_Duration); ok {
		return x.Duration
	}
	return 0
}

type isFilter_Value interface {
	isFilter_Value()
}

type Filter_Str struct {
	Str string `protobuf:"bytes,3,opt,name=str,proto3,oneof"`
}

type Filter_Timestamp struct {
	Timestamp int64 `protobuf:"varint,4,opt,name=timestamp,proto3,oneof"`
}

type Filter_Duration struct {
	Duration int64 `protobuf:"varint,5,opt,name=duration,proto3,oneof"`
}

func (*Filter_Str) isFilter_Value() {}

func (*Filter_Timestamp) isFilter_Value() {}

func (*Filter_Duration) isFilter_Value() {}

type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of row groups bitmaps for a block
	Bitmaps [][]byte `protobuf:"bytes,1,rep,name=bitmaps,proto3" json:"bitmaps,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_blocks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_blocks_proto_rawDescGZIP(), []int{4}
}

func (x *Index) GetBitmaps() [][]byte {
	if x != nil {
		return x.Bitmaps
	}
	return nil
}

var File_blocks_proto protoreflect.FileDescriptor

var file_blocks_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x31, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x74, 0x0a, 0x05, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22,
	0xaa, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x97, 0x01, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12,
	0x1a, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x03, 0x73,
	0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12,
	0x1e, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1c, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x07, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x73, 0x2a, 0x58, 0x0a, 0x02, 0x4f, 0x70, 0x12,
	0x09, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6e, 0x6f,
	0x74, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x65, 0x73,
	0x73, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x61,
	0x6c, 0x10, 0x05, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blocks_proto_rawDescOnce sync.Once
	file_blocks_proto_rawDescData = file_blocks_proto_rawDesc
)

func file_blocks_proto_rawDescGZIP() []byte {
	file_blocks_proto_rawDescOnce.Do(func() {
		file_blocks_proto_rawDescData = protoimpl.X.CompressGZIP(file_blocks_proto_rawDescData)
	})
	return file_blocks_proto_rawDescData
}

var file_blocks_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_blocks_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_blocks_proto_goTypes = []interface{}{
	(Op)(0),          // 0: blocks.Op
	(*Metadata)(nil), // 1: blocks.Metadata
	(*Block)(nil),    // 2: blocks.Block
	(*Stats)(nil),    // 3: blocks.Stats
	(*Filter)(nil),   // 4: blocks.Filter
	(*Index)(nil),    // 5: blocks.Index
}
var file_blocks_proto_depIdxs = []int32{
	2, // 0: blocks.Metadata.blocks:type_name -> blocks.Block
	3, // 1: blocks.Block.stats:type_name -> blocks.Stats
	0, // 2: blocks.Filter.op:type_name -> blocks.Op
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_blocks_proto_init() }
func file_blocks_proto_init() {
	if File_blocks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blocks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blocks_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Filter_Str)(nil),
		(*Filter_Timestamp)(nil),
		(*Filter_Duration)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blocks_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blocks_proto_goTypes,
		DependencyIndexes: file_blocks_proto_depIdxs,
		EnumInfos:         file_blocks_proto_enumTypes,
		MessageInfos:      file_blocks_proto_msgTypes,
	}.Build()
	File_blocks_proto = out.File
	file_blocks_proto_rawDesc = nil
	file_blocks_proto_goTypes = nil
	file_blocks_proto_depIdxs = nil
}
