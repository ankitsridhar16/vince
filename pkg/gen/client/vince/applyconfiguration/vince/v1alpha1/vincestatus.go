/*
Licensed under the GNU AFFERO GENERAL PUBLIC LICENSE Version 3
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// VinceStatusApplyConfiguration represents an declarative configuration of the VinceStatus type for use
// with apply.
type VinceStatusApplyConfiguration struct {
	Sites []TargetApplyConfiguration `json:"sites,omitempty"`
}

// VinceStatusApplyConfiguration constructs an declarative configuration of the VinceStatus type for use with
// apply.
func VinceStatus() *VinceStatusApplyConfiguration {
	return &VinceStatusApplyConfiguration{}
}

// WithSites adds the given value to the Sites field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Sites field.
func (b *VinceStatusApplyConfiguration) WithSites(values ...*TargetApplyConfiguration) *VinceStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithSites")
		}
		b.Sites = append(b.Sites, *values[i])
	}
	return b
}
